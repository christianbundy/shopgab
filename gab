#!/bin/bash
set -e
branch_name="$(git symbolic-ref HEAD 2>/dev/null)" ||
branch_name="(unnamed branch)"     # detached HEAD
branch_name=${branch_name##refs/heads/}

if [ "$@1" == "branch" ]; then
	exists_locally=$(git show-ref --verify --quiet refs/heads/$2; echo $?)
	exists_remotely=$(git ls-remote --quiet origin $2; echo $?)
	git checkout --quiet master
	git pull --quiet origin master
	if [ "$exists_locally" == "0" ]; then
		git checkout --quiet -b $2
	else
		git checkout --quiet $2
	fi
	if [ "$exists_remotely" == "0" ]; then
		git pull --quiet origin $2
	else
		git push --quiet -u origin $2
	fi
	echo "Checkout "$2
elif [ "$1" == "test" ]; then
	git push --quiet origin $branch_name
	git checkout --quiet test
	git merge --quiet $branch_name
	git push --quiet origin test
	git push --quiet test test
	git checkout --quiet $branch_name
	echo "Deploy to test"
elif [ "$1" == "update" ]; then
	git checkout --quiet master
	git pull --quiet origin master
	git checkout --quiet $branch_name
	git pull --quiet origin $branch_name
	git merge --quiet master
	git push --quiet origin $branch_name
	echo "Updated "$branch_name
elif [ "$1" == "pull-request" ]; then
	hub pull-request --quiet -i $branch_name -b kyledjoseph:master -h kyledjoseph:$branch_name
	echo "Created pull-request at https://github.com/kyledjoseph/shopgab/pull/"$branch_name
elif [ "$1" == "deploy" ]; then
	git checkout --quiet master
	git pull --quiet origin master
	git push --quiet deploy master
	git checkout --quiet test
	git pull --quiet origin master
	git merge --quiet master
	git push --quiet origin test
	git push --quiet test test
	echo "Deployed to test and live!"
elif [ "$1" == "commit" ]; then
	git add -A
	git commit -q
	git pull --quiet origin $branch_name
	git push --quiet origin $branch_name
	echo "Added changes, committed, and pushed!"
else
	echo "Available commands"
	echo "------------------"
	echo "gab branch 12345"
	echo "gab commit \"Delete everything\""
	echo "gab test"
	echo "gab pull-request"
	echo "gab update"
fi
